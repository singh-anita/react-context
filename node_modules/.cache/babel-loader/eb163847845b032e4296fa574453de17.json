{"ast":null,"code":"var _jsxFileName = \"/home/anita/Project/react-context/src/context/AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\"; // Context has been created\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null); // const ThemeContext = createContext({ dark: false , setTheme: () => {},});\n// Provider\n// const ThemeContextProvider = ({children}) => {\n//   const [theme, setTheme] = useState({ dark: false})\n//   // const themeFunction =  ()  =>  {\n//   //   setTheme(!theme);\n//   // };\n//   return (\n//     <ThemeContext.Provider value={{theme, setTheme}}>\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isUserLogin, setIsUserLogin] = useState(false);\n\n  const login = () => {\n    setIsUserLogin(!isUserLogin);\n    console.log(isUserLogin);\n  };\n\n  const logout = () => {\n    setIsUserLogin(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isUserLogin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"G8ocU6gHXgo3l4ug4hBR9GBjqfA=\");\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","AuthContext","AuthProvider","children","isUserLogin","setIsUserLogin","login","console","log","logout"],"sources":["/home/anita/Project/react-context/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n// Context has been created\nconst AuthContext = createContext(null)\n// const ThemeContext = createContext({ dark: false , setTheme: () => {},});\n\n// Provider\n// const ThemeContextProvider = ({children}) => {\n//   const [theme, setTheme] = useState({ dark: false})\n\n//   // const themeFunction =  ()  =>  {\n//   //   setTheme(!theme);\n//   // };\n\n//   return (\n//     <ThemeContext.Provider value={{theme, setTheme}}>\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\nconst AuthProvider = ({children}) => {\n  const [isUserLogin, setIsUserLogin] = useState(false)\n  const login = ()=>{\n    setIsUserLogin(!isUserLogin)\n    console.log(isUserLogin)\n  }\n  const logout = ()=>{\n    setIsUserLogin(false)\n  }\n\n  return (\n    <AuthContext.Provider value={{isUserLogin, login, logout}}>\n       {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport { AuthContext, AuthProvider };"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C,C,CACA;;;AACA,MAAMC,WAAW,gBAAGF,aAAa,CAAC,IAAD,CAAjC,C,CACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,YAAY,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACnC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;;EACA,MAAMM,KAAK,GAAG,MAAI;IAChBD,cAAc,CAAC,CAACD,WAAF,CAAd;IACAG,OAAO,CAACC,GAAR,CAAYJ,WAAZ;EACD,CAHD;;EAIA,MAAMK,MAAM,GAAG,MAAI;IACjBJ,cAAc,CAAC,KAAD,CAAd;EACD,CAFD;;EAIA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAACD,WAAD;MAAcE,KAAd;MAAqBG;IAArB,CAA7B;IAAA,UACIN;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAfD;;GAAMD,Y;;KAAAA,Y;AAiBN,SAASD,WAAT,EAAsBC,YAAtB"},"metadata":{},"sourceType":"module"}